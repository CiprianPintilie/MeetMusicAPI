###################################################################

Create self signed certificate and configure nginx:

    - sudo apt-get update
    - sudo apt-get install nginx
    - sudo openssl req -x509 -nodes -sha256 -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt
    - sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
    - sudo nano /etc/nginx/snippets/self-signed.conf
        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

    - sudo nano /etc/nginx/snippets/ssl-params.conf
        # from https://cipherli.st/
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 20s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        ssl_dhparam /etc/ssl/certs/dhparam.pem;

    - sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak
    - sudo nano /etc/nginx/sites-available/default
        server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name 54.38.33.198;
            return 302 https://$server_name$request_uri;
        }

        server {
            # SSL configuration
            listen 443 ssl http2 default_server;
            listen [::]:443 ssl http2 default_server;
            include snippets/self-signed.conf;
            include snippets/ssl-params.conf;
            location / {
                proxy_pass http://127.0.0.1:5000;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto https;
            }
        }

    - sudo ufw allow 'Nginx Full'
    - sudo ufw delete allow 'Nginx HTTP'
    - sudo ufw status
    - sudo nginx -t
    - sudo systemctl restart nginx

###################################################################

Install .Net core 2.1.4:

    - sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
    - sudo apt-get update
    - sudo apt-get install dotnet-sdk-2.1.4

###################################################################

Deploy API:

    //Create repository
    - cd /sources/MeetMusic
    - sudo git clone https://github.com/CiprianPintilie/MeetMusicAPI
    //Update repository
    - cd /sources/MeetMusic/MeetMusicAPI
    - sudo git pull
    //Publish
    - cd /sources/MeetMusic/MeetMusicAPI/MeetMusic
    - sudo dotnet restore
    - sudo dotnet publish -c release -o /var/www/MeetMusic -r linux-x64
    - sudo systemctl restart nginx

###################################################################

Create service:

    sudo nano /etc/systemd/system/kestrel-MeetMusic.service

    [Unit]
    Description=MeetMusic

    [Service]
    WorkingDirectory=/var/www/MeetMusic
    ExecStart=/usr/bin/dotnet /var/www/MeetMusic/MeetMusic.dll
    Restart=always
    RestartSec=10
    SyslogIdentifier=MeetMusic
    User=www-data
    Environment=ASPNETCORE_ENVIRONMENT=Production

    [Install]
    WantedBy=multi-user.target

###################################################################

Manage service:

    - sudo systemctl stop kestrel-MeetMusic.service
    - sudo systemctl enable kestrel-MeetMusic.service
    - sudo systemctl start kestrel-MeetMusic.service
    - sudo systemctl status kestrel-MeetMusic.service

###################################################################

Kill app :

    - sudo killall dotnet

###################################################################