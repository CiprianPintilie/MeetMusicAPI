###################################################################

Install .Net core 2.1.4:

    - sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-xenial-prod xenial main" > /etc/apt/sources.list.d/dotnetdev.list'
    - sudo apt-get update
    - sudo apt-get install dotnet-sdk-2.1.4

###################################################################

Install and configure nginx:

    - sudo apt-get install nginx
    - sudo vim /etc/nginx/sites-available/default

    server {
        listen 443;

        location / {
            proxy_pass http://localhost:44364;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    - sudo nginx -s reload

###################################################################

Create certificate:

    - sudo apt-get install openssl
    - sudo mkdir /MeetMusicSSL
    - sudo mkdir /MeetMusicSSL/certificates
    - sudo vim caconf.cnf

    [ ca ]
    default_ca      = local_ca
    #
    #
    # Default location of directories and files needed to generate certificates.
    #
    [ local_ca ]
    dir             = /MeetMusicSSL
    certificate     = $dir/certificateAuthorityCertificate.pem
    database        = $dir/index.txt
    new_certs_dir   = $dir/certificates
    private_key     = $dir/certificateAuthorityPrivateKey.pem
    serial          = $dir/serial
    #
    #
    # Default expiration and encryption policies for certificates.
    #
    default_crl_days        = 365
    default_days            = 1825
    default_md              = sha256
    #
    policy          = local_ca_policy
    x509_extensions = local_ca_extensions
    #
    #
    # Copy extensions specified in the certificate request
    #
    copy_extensions = copy
    #
    #
    # Default policy to use when generating server certificates.  The following
    # fields must be defined in the server certificate.
    #
    [ local_ca_policy ]
    commonName              = supplied
    stateOrProvinceName     = supplied
    countryName             = supplied
    emailAddress            = supplied
    organizationName        = supplied
    organizationalUnitName  = supplied
    #
    #
    # x509 extensions to use when generating server certificates.
    #
    [ local_ca_extensions ]
    basicConstraints        = CA:false
    #
    #
    # The default root certificate generation policy.
    #
    [ req ]
    default_bits    = 2048
    default_keyfile = /MeetMusicSSL/certificateAuthorityPrivateKey.pem
    default_md      = sha256
    #
    prompt                  = no
    distinguished_name      = root_ca_distinguished_name
    x509_extensions         = root_ca_extensions
    #
    #
    # Root Certificate Authority distinguished name.  Change these fields to match
    # your local environment!
    #
    [ root_ca_distinguished_name ]
    commonName              = MeetMusicAuthority
    stateOrProvinceName     = France
    countryName             = FR
    emailAddress            = pintilie.ciprian@outlook.fr
    organizationName        = MeetMusic
    organizationalUnitName  = MeetMusic
    #
    [ root_ca_extensions ]
    basicConstraints        = CA:true

    - export OPENSSL_CONF=/MeetMusicSSL/caconf.cnf
    - openssl req -x509 -out certificateAuthorityCertificate.pem -newkey rsa:2048 -keyout certificateAuthorityPrivateKey.pem -days 365
    //To check if ok
    - openssl x509 -in certificateAuthorityCertificate.pem -text 
    - sudo mkdir /MeetMusicCertificates
    - sudo mkdir /MeetMusicCertificates/localhost
    - cd /MeetMusicCertificates/localhost
    - sudo vim localhost.cnf

    [ req ]
    prompt                  = no
    distinguished_name      = server_distinguished_name
    req_extensions          = v3_req

    [ server_distinguished_name ]
    commonName              = localhost
    stateOrProvinceName     = France
    countryName             = FR
    emailAddress            = pintilie.ciprian@outlook.fr
    organizationName        = MeetMusic
    organizationalUnitName  = MeetMusic

    [ v3_req ]
    basicConstraints        = CA:FALSE
    keyUsage                = nonRepudiation, digitalSignature, keyEncipherment

    - export OPENSSL_CONF=/MeetMusicCertificates/localhost/localhost.cnf
    - openssl req -out localhostCsr.pem -newkey rsa:2048 -keyout localhostPrivateKey.pem
    - export OPENSSL_CONF=/MeetMusicSSL/caconf.cnf
    - openssl ca -in /MeetMusicCertificates/localhost/localhostCsr.pem -out /MeetMusicCertificates/localhost/localhostCertificate.pem
    - cd /MeetMusicCertificates/localhost
    - openssl pkcs12 -export -in localhostCertificate.pem -inkey localhostPrivateKey.pem -out localhost.pfx

###################################################################

Deploy API:

    //Create repository
    - cd /sources/MeetMusic
    - sudo git clone https://github.com/CiprianPintilie/MeetMusicAPI
    //Update repository
    - cd /sources/MeetMusic/MeetMusicAPI
    - sudo git pull
    //Publish
    - cd /sources/MeetMusic/MeetMusicAPI/MeetMusic
    - sudo dotnet restore
    - sudo dotnet publish -c release -o /var/www/MeetMusic -r linux-x64

###################################################################

Create service:

    sudo vim /etc/systemd/system/kestrel-MeetMusic.service

    [Unit]
    Description=MeetMusic

    [Service]
    WorkingDirectory=/var/www/MeetMusic
    ExecStart=/usr/bin/dotnet /var/www/MeetMusic/MeetMusic.dll
    Restart=always
    RestartSec=10
    SyslogIdentifier=MeetMusic
    User=www-data
    Environment=ASPNETCORE_ENVIRONMENT=Production

    [Install]
    WantedBy=multi-user.target

###################################################################

Start service:

    - sudo systemctl enable kestrel-MeetMusic.service
    - sudo systemctl start kestrel-MeetMusic.service
    - sudo systemctl status kestrel-MeetMusic.service

###################################################################

Kill app :

    - sudo killall dotnet

###################################################################